<script src='/js/check.js'></script>
<script src='/js/update.js'></script>
<style>
  td{
    background: green;
    width: 50px; height: 50px;
  }
  table{
    background: black;
  }
  .black{
    background: black;
    margin: auto;
    width: 40px; height: 40px;
    border-radius: 50%;
  }
  .white{
    background: white;
    margin: auto;
    width: 40px; height: 40px;
    border-radius: 50%;
  }
  .blue{
    background: blue;
    margin: auto;
    width: 40px; height: 40px;
    border-radius: 50%;
  }
  .red{
    background: red;
    margin: auto;
    width: 40px; height: 40px;
    border-radius: 50%;
  }
</style>
<div id='count'><%= @count + 1%></div><div id='turn'><%= @turn %></div>
<table>
  <% for i in 0..@board_size %>
  <tr>
    <% for j in 0..@board_size %>
      <td onclick="s('<%= i %><%= j %>')"  id='<%= i %><%= j %>'></td>
    <% end %>
  </tr>
  <% end %>
</table>
<script>
  var countBox = document.getElementById("count");
  var turnBox = document.getElementById("turn");
  
  // ロード後の処理
  initializeBoard = () => {
  <% @stones.each do |stone| %>
    document.
      getElementsByTagName('tr')[<%= stone.y %>].
      getElementsByTagName('td')[<%= stone.x %>].innerHTML 
        = "<div class='<%= stone.color %>'></div>"
  <% end %>
  }

  // ボードの中に入っているか判定
  limitBoard = (pos) => {
    return Math.min(<%= @board_size %>, Math.max(0, pos))
  }

  getBoard = (x, y) => {
    table = document.getElementsByTagName('table')[0]
    return table.getElementsByTagName('tr')[y].
      getElementsByTagName('td')[x]
  }

  insideBoard = (x,y) => {
    if(x >= <%= @board_size %> || y >= <%= @board_size %>)return false
    if(x < 0 || y < 0)return false
    return true
  }

  window.onload = function(){
    initializeBoard()
    checkBoard()
    var count = new WebSocket('ws://' + window.location.host + "/websocket/count/<%= @room.id %>");

    // 接続が始まった時
    count.onopen = function() { count.send('{"type":"open"}'); };
    // 接続が終わった時
    count.onclose = function() { count.send('{"type":"close", "id": <%= @room.id %>}'); };
    // メッセージを受け取った時
    count.onmessage = function(m) {
      console.log(m.data)
      data = JSON.parse(m.data)
      console.log(data)
      if(data.type == 'count'){
        countBox.innerHTML = data.count         
      } else if(data.type == 'board'){
        console.log(data.turn)
        turnBox.innerText = data.turn
        turn = data.turn == 'black' ? 'white' : 'black'
        document.getElementById(data.pos).innerHTML = '<div class=' + turn + '></div>'
        checkBoard()
      }
    }

    // ボタンが押されたら
    s = function(msg){
      if(document.getElementById(msg).innerHTML.match('red')){
        updateBoard(parseInt(msg[1]), parseInt(msg[0]))
      }
    }

    updateStone = (x, y, turn) => {
      pos = getBoard(x,y)
      pos.innerHTML = `<div class="${turn}"></div>`
      count.send(JSON.stringify({type:'board', pos: `${y}${x}`, turn: turn}));
    }
  };
  

</script>
